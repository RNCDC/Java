package Lesson2;

import java.util.Scanner;

public class OverLoading 
{
	static Scanner scan = new Scanner (System.in);
	static int num1, num2; //global declaration
	
	public static void main(String[] args) 
	{
		System.out.print("First Number: ");
		num1 = scan.nextInt();
		System.out.print("Second Number: ");
		num2 = scan.nextInt();
		method_OverLoad(); // 1st method
		
		int diff = method_OverLoad(num1); //2nd method
		System.out.println("Difference: " + diff); 
		
		//long is like int, just different size
		//example is float and double
		long prod = method_OverLoad(num1, num2); //3rd method
		System.out.println("Product: " + prod);
		
		int numbers[] = {num1, num2}; 
		method_OverLoad(numbers); // 4th method
	}
	
	public static void method_OverLoad()
	{
		int sum = num1 + num2;
		System.out.println("Sum: " + sum);
	}

	public static int method_OverLoad(int no)
	{
		return (no - num2);
	}
	
	public static long method_OverLoad(int no1, int no2)
	{
		return (no1 * no2);
	}
	
package Lesson2;

//if public final can't be use anymore
//class_name of the class_currently_on then the class_name of the class you want to inherit
public class Call_Method extends Method // inherited the Method
{	
	public static void main(String[] args) 
	{
		//call the method inputNumber from the Method
		int number = Method.inputNumber(); 
		System.out.print("Input Value is: " + number + "\n");
		
		// Method. or (class_name).  like the hpw you use correlation name/function in mysql
		Method.factors(number); 
		Method.count = Method.determine(number); 
		Method.primeCompo(); 
	}
}
	public static void method_OverLoad(int no[])
	{
		float quo = (float) no[0] / no[1];
		System.package Lesson2;

//just like a function in a seperate file, without function calls or anything
//connected to Call_Abstract
public class Abstract 
{
	public long method_OverLoad(int no1, int no2)
	{
		return (no1 * no2);
	}
	
	public void method_OverLoad(int no[])
	{
		float quo = (float) no[0] / no[1];
		System.out.println("Quotient: " + quo);
	}
}
out.println("Quotient: " + quo);
	}
}
